type Mintbase @entity {
  id: ID!
  count: BigInt!
  stores: [Store]!
}

type Store @entity {
  id: ID!
  owner: Bytes!
  name: String!
  symbol: String!
  timestamp: String!
  totalSupply: BigInt!
  burned: Boolean!
  factory: Mintbase! @derivedFrom(field: "stores")
  things: [Thing!]! @derivedFrom(field: "resolveStore")
  resolveUser: User!
}

type Thing @entity {
  id: ID!
  minter: Bytes!
  timestamp: String!
  factory: Store! @derivedFrom(field: "things")
  burned: Boolean!
  forSale: Boolean!
  metaId: String!
  resolveStore: Store!
  tokens: [Token!]! @derivedFrom(field: "resolvedThing")
}

type Token @entity {
  id: ID!
  tokenId: String!
  metaId: String!
  price: String!
  burned: Boolean!
  state: String!
  resolvedThing: Thing!
  store: Store!
  resolveOwner: User!
}

type User @entity {
  id: ID!
  stores: [Store!]! @derivedFrom(field: "resolveUser")
  tokens: [Token!]! @derivedFrom(field: "resolveOwner")
}
